pipeline:
  name: harness_ssh_pipeline
  identifier: harness_ssh_pipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: deploy-ssh
        identifier: deployssh
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: harness_ssh
            serviceInputs:
              serviceDefinition:
                type: Ssh
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: harness_remoteinstance
          execution:
            steps:
              - stepGroup:
                  identifier: Step_Group_1
                  name: Step Group
                  strategy:
                    repeat:
                      items: <+stage.output.hosts>
                      start: 0
                      end: 1
                      unit: Count
                  steps:
                    - step:
                        name: Deploy
                        identifier: Deploy_1
                        type: Command
                        timeout: 10m
                        spec:
                          onDelegate: false
                          environmentVariables: []
                          outputVariables: []
                          commandUnits:
                            - identifier: Setup_Runtime_Paths_1
                              name: Setup Runtime Paths
                              type: Script
                              spec:
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: |-
                                      # Execute as root and pass environment variables
                                      # su -p -

                                      # Execute as root via user credentials (with root privileges)
                                      # sudo -E su -p -

                                      # Creating runtime, backup and staging folders:

                                      mkdir -p $HOME/<+service.name>/<+env.name>/runtime
                                      mkdir -p $HOME/<+service.name>/<+env.name>/backup
                                      mkdir -p $HOME/<+service.name>/<+env.name>/staging
                            - identifier: Stop_1
                              name: Stop
                              type: Script
                              spec:
                                workingDirectory: $HOME/<+service.name>/<+env.name>
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: echo "Stopping..."
                            - identifier: Copy_Artifact_1
                              name: Copy Artifact
                              type: Copy
                              spec:
                                sourceType: Artifact
                                destinationPath: $HOME/<+service.name>/<+env.name>
                            - identifier: Copy_Config_1
                              name: Copy Config
                              type: Copy
                              spec:
                                sourceType: Artifact
                                destinationPath: $HOME/<+service.name>/<+env.name>
                            - identifier: Start_1
                              name: Start
                              type: Script
                              spec:
                                workingDirectory: $HOME/<+service.name>/<+env.name>
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: echo "Starting..."
            rollbackSteps:
              - stepGroup:
                  identifier: Step_Group_Rollback_1
                  name: Step Group
                  strategy:
                    repeat:
                      items: <+stage.output.hosts>
                      start: 0
                      end: 1
                      unit: Count
                  steps:
                    - step:
                        name: Rollback
                        identifier: Rollback_1
                        type: Command
                        timeout: 10m
                        spec:
                          onDelegate: false
                          environmentVariables: []
                          outputVariables: []
                          commandUnits:
                            - identifier: Stop_Rollback_1
                              name: Stop Rollback
                              type: Script
                              spec:
                                workingDirectory: $HOME/<+service.name>/<+env.name>
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: echo "Stopping..."
                            - identifier: Setup_Runtime_Paths_Rollback_1
                              name: Setup Runtime Paths Rollback
                              type: Script
                              spec:
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: |-
                                      # Execute as root and pass environment variables
                                      # su -p -

                                      # Execute as root via user credentials (with root privileges)
                                      # sudo -E su -p -

                                      # Creating runtime, backup and staging folders:

                                      mkdir -p $HOME/<+service.name>/<+env.name>/runtime
                                      mkdir -p $HOME/<+service.name>/<+env.name>/backup
                                      mkdir -p $HOME/<+service.name>/<+env.name>/staging
                            - identifier: Copy_Artifact_Rollback_1
                              name: Copy Artifact Rollback
                              type: Copy
                              spec:
                                sourceType: Artifact
                                destinationPath: $HOME/<+service.name>/<+env.name>
                            - identifier: Copy_Config_Rollback_1
                              name: Copy Config Rollback
                              type: Copy
                              spec:
                                sourceType: Config
                                destinationPath: $HOME/<+service.name>/<+env.name>
                            - identifier: Start_Rollback_1
                              name: Start Rollback
                              type: Script
                              spec:
                                shell: Bash
                                source:
                                  type: Inline
                                  spec:
                                    script: echo "Starting..."
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
